---

- name: install packages for OCP install
  package: name={{ item }} state=present
  with_items:
    - ansible-2.6.6
    - openshift-ansible
    - vim
    - tmux

- name: Create Inventory file
  template:
    src: hosts.j2
    dest: /etc/ansible/hosts

- name: Build hosts file
  lineinfile:
    dest=/etc/hosts
    regexp='.*{{ item.key }}$' line="{{ item.value.address }} {{ item.key }}"
    state=present
  with_dict: "{{ virtual_machines }}"

- name: prepare NFS share
  filesystem:
    fstype: xfs
    dev: /dev/vdb
  when: pv_source == 'nfs'

- name: Create exports dir
  file:
    path: /srv/nfs
    state: directory
  when: pv_source == 'nfs'

- name: Mount new disk to mount point
  mount:
    path: /srv/nfs
    src: /dev/vdb
    fstype: xfs
    state: mounted
  when: pv_source == 'nfs'

- name: configure nfs ports 111,2049 to iptables
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{item}}"
    jump: ACCEPT
    comment: "Accept trafic to {{item}}"
  with_items:
  - 111
  - 2049

- name: ensure reguired package are installed
  package:
    name: "{{item}}"
    state: latest
  with_items:
  - nfs-utils
  - rpcbind
  when: pv_source == 'nfs'

- name: ensure reguired services are running
  service:
    name: "{{item}}"
    state: restarted
    enabled: yes
  with_items:
  - rpcbind
  - nfs-server
  when: pv_source == 'nfs'

- name: ensure openshift-ansible.exports file present
  file:
    path: /etc/exports.d/openshift-ansible.exports
    state: touch
  when: pv_source == 'nfs'

- name: "Setup NFS exports"
  lineinfile:
    dest: /etc/exports.d/openshift-ansible.exports
    state: present
    line: "/srv/nfs/pv{{item.name}} *(rw,root_squash,no_wdelay)"
  with_items:
  - "{{nfs_pvs}}"
  when: pv_source == 'nfs'

- name: "Create directories"
  file:
    path: "/srv/nfs/pv{{item.name}}"
    state: directory
    owner: nfsnobody
    group: nfsnobody
    mode: 0777
  with_items:
  - "{{nfs_pvs}}"
  when: pv_source == 'nfs'

- name: Refresh nfs exports
  command: exportfs -ra
  when: pv_source == 'nfs'
