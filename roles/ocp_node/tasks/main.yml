---

- name: ensure all packages are up to date
  package: name=* state=latest

- name: install packages for OCP install
  package: name={{ item }} state=present
  with_items:
    #- docker-1.13.1
    - container-selinux
    - atomic-openshift-docker-excluder
    - wget
    - git
    - net-tools
    - bind-utils
    - iptables-services
    - bridge-utils
    - bash-completion
    - kexec-tools
    - sos
    - psacct
    - NetworkManager
    - cri-o

- name: Build hosts file
  lineinfile:
    dest=/etc/hosts
    regexp='.*{{ item.key }}$' line="{{ item.value.address }} {{ item.key }}"
    state=present
  with_dict: "{{ virtual_machines }}"

- name: start NetworkManager
  service: name=NetworkManager state=started enabled=true

- name: Set cap on journald logs so they don't fill disks
  lineinfile:
    path: /etc/systemd/journald.conf
    regexp: 'SystemMaxUse='
    line: 'SystemMaxUse=1G'
  register: journal_result

- name: kick journald if needed
  service:
    name: systemd-journald
    state: restarted
  when: journal_result.changed

- name: add container storage mount point
  file:
    path: /var/lib/containers
    state: directory

- name: create filesystem for containers
  filesystem:
    fstype: xfs
    dev: "/dev/{{ container_disk }}"

- name: add container storage mount point
  mount:
    path: /var/lib/containers
    src: "/dev/{{ container_disk }}"
    fstype: xfs
    state: mounted

# - name: move docker dir into /var/lib/containers/docker
#   file:
#     path: /var/lib/containers/docker
#     state: directory
# - file:
#     path: /var/lib/docker
#     src: /var/lib/containers/docker
#     state: link
#
# - name: Detect Docker storage configuration status
#   command: grep -q overlay2 /etc/sysconfig/docker-storage
#   register: docker_storage_test
#   changed_when: false
#   failed_when: false

# We need some extra wiping, see
# htttps://bugzilla.redhat.com/show_bug.cgi?id=1572266

- name: Wipe possible ghost PV from gluster disk
  command: "pvremove --force --force -y /dev/{{ ocs_disk }}"
  ignore_errors: yes
#  when: docker_storage_test.rc != 0

- name: Wipe the beginning of the disk from docker disk
  command: "dd if=/dev/zero of={{ ocs_disk }} bs=1M count=4"
#  when: docker_storage_test.rc != 0

# - name: Create Docker storage configuration
#   copy:
#     dest: /etc/sysconfig/docker-storage-setup
#     content: |
#       STORAGE_DRIVER=overlay2
#       DEVS=/dev/vdb
#       VG=ocp
#       WIPE_SIGNATURES=true
#  when: docker_storage_test.rc != 0

# - name: Apply Docker storage configuration changes
#   command: systemctl start docker-storage-setup
#   when: docker_storage_test.rc != 0

# - name: Enable docker
#   command: systemctl enable docker

# - name: Start docker
#   command: systemctl start docker
